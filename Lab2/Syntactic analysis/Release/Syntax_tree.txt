   1: read x; { input an integer }
	1: reserved word: read
	1: ID, name= x
	1: ;
   2: for x := 1 to y+5 do
	2: reserved word: for
	2: ID, name= x
	2: :=
	2: NUM, val= 1
	2: reserved word: to
	2: ID, name= y
	2: +
	2: NUM, val= 5
	2: reserved word: do
   3:   fact := 1;
	3: ID, name= fact
	3: :=
	3: NUM, val= 1
	3: ;
   4:   repeat
	4: reserved word: repeat
   5:     fact := fact * x;
	5: ID, name= fact
	5: :=
	5: ID, name= fact
	5: *
	5: ID, name= x
	5: ;
   6:     x := x % 2
	6: ID, name= x
	6: :=
	6: ID, name= x
	6: %
	6: NUM, val= 2
   7:   until x = 0;
	7: reserved word: until
	7: ID, name= x
	7: =
	7: NUM, val= 0
	7: ;
   8:   write fact
	8: reserved word: write
	8: ID, name= fact
   9: enddo;
	9: reserved word: enddo
	9: ;
  10: while 0 < x do
	10: reserved word: while
	10: NUM, val= 0
	10: <
	10: ID, name= x
	10: reserved word: do
  11:   fact := 1;
	11: ID, name= fact
	11: :=
	11: NUM, val= 1
	11: ;
  12:   write fact
	12: reserved word: write
	12: ID, name= fact
  13: endwhile;
	13: reserved word: endwhile
	13: ;
  14: do 
	14: reserved word: do
  15:   fact := 1;
	15: ID, name= fact
	15: :=
	15: NUM, val= 1
	15: ;
  16:   x := x * 2
	16: ID, name= x
	16: :=
	16: ID, name= x
	16: *
	16: NUM, val= 2
  17: while x=0	17: reserved word: while
	17: ID, name= x
	17: =
	18: NUM, val= 0
	19: EOF

Syntax tree:
  Read: x
  For:x
    Const: 1
    Op: +
      Id: y
      Const: 5
    Assign to: fact
      Const: 1
    Repeat
      Assign to: fact
        Op: *
          Id: fact
          Id: x
      Assign to: x
        Op: %
          Id: x
          Const: 2
      Op: =
        Id: x
        Const: 0
    Write
      Id: fact
  While
    Op: <
      Const: 0
      Id: x
    Assign to: fact
      Const: 1
    Write
      Id: fact
  DoWhile
    Assign to: fact
      Const: 1
    Assign to: x
      Op: *
        Id: x
        Const: 2
    Op: =
      Id: x
      Const: 0
